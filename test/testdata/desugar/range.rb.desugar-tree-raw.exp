ClassDef{
  kind = class
  name = EmptyTree<<C <U <root>>>>
  ancestors = [ConstantLit{
      orig = nullptr
      symbol = ::<todo sym>
    }]
  rhs = [
    MethodDef{
      flags = {}
      name = <U foo><<C <U <todo sym>>>>
      args = [BlockArg{ expr = UnresolvedIdent{
          kind = Local
          name = <U <blk>>
        } }]
      rhs = InsSeq{
        stats = [
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U a>
            }
            rhs = Range{
              from = Literal{ value = 1 }
              to = Literal{ value = 2 }
              exclusive = false
            }
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U b>
            }
            rhs = Send{
              recv = UnresolvedConstantLit{
                scope = EmptyTree
                cnst = <C <U Range>>
              }
              fun = <U new>
              block = nullptr
              args = [
                Literal{ value = 1 }
                Literal{ value = 2 }
              ]
            }
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U c>
            }
            rhs = Range{
              from = Literal{ value = 1 }
              to = Literal{ value = 2 }
              exclusive = true
            }
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U d>
            }
            rhs = Send{
              recv = UnresolvedConstantLit{
                scope = EmptyTree
                cnst = <C <U Range>>
              }
              fun = <U new>
              block = nullptr
              args = [
                Literal{ value = 1 }
                Literal{ value = 2 }
                Literal{ value = true }
              ]
            }
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U e>
            }
            rhs = Send{
              recv = Range{
                from = Literal{ value = 1 }
                to = Literal{ value = 42 }
                exclusive = false
              }
              fun = <U first>
              block = nullptr
              args = [
              ]
            }
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U f>
            }
            rhs = Send{
              recv = Range{
                from = Literal{ value = "a" }
                to = Literal{ value = "z" }
                exclusive = false
              }
              fun = <U last>
              block = nullptr
              args = [
              ]
            }
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U a>
              }
            ]
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U b>
              }
            ]
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U c>
              }
            ]
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U d>
              }
            ]
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U e>
              }
            ]
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U f>
              }
            ]
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U g>
            }
            rhs = Range{
              from = Literal{ value = 1 }
              to = EmptyTree
              exclusive = false
            }
          }
          Assign{
            lhs = UnresolvedIdent{
              kind = Local
              name = <U h>
            }
            rhs = Send{
              recv = UnresolvedConstantLit{
                scope = EmptyTree
                cnst = <C <U Range>>
              }
              fun = <U new>
              block = nullptr
              args = [
                Literal{ value = 1 }
                Literal{ value = nil }
              ]
            }
          }
          Send{
            recv = UnresolvedConstantLit{
              scope = EmptyTree
              cnst = <C <U T>>
            }
            fun = <U reveal_type>
            block = nullptr
            args = [
              UnresolvedIdent{
                kind = Local
                name = <U g>
              }
            ]
          }
        ],
        expr = Send{
          recv = UnresolvedConstantLit{
            scope = EmptyTree
            cnst = <C <U T>>
          }
          fun = <U reveal_type>
          block = nullptr
          args = [
            UnresolvedIdent{
              kind = Local
              name = <U h>
            }
          ]
        }
      }
    }
  ]
}
