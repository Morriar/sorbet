class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Foo><<C <todo sym>>> < (::<todo sym>)
    def bar<<C <todo sym>>>(a, b, k1:, k2:, &block)
      <emptyTree>
    end

    def foo<<C <todo sym>>>(*<fwd-args>, *<fwd-kwargs>:, &<fwd-block>)
      ::<Magic>.<call-with-splat-and-block>(<emptyTree>::<C T>.unsafe(<self>), :bar, <fwd-args>.to_a().concat([<fwd-kwargs>.to_hash()]), nil, <fwd-block>)
    end

    def foo2<<C <todo sym>>>(*args, *kwargs:, &block)
      ::<Magic>.<call-with-splat-and-block>(<emptyTree>::<C T>.unsafe(<self>), :bar, args.to_a().concat([kwargs.to_hash()]), nil, block)
    end
  end

  <emptyTree>::<C Foo>.new().foo()

  <emptyTree>::<C Foo>.new().foo(1, 2)

  <emptyTree>::<C Foo>.new().foo(:k1, 1, :k2, 2)

  <emptyTree>::<C Foo>.new().foo() do ||
    <self>.puts("foo")
  end

  <emptyTree>::<C Foo>.new().foo(1, 2, :k1, 1, :k2, 2) do ||
    <self>.puts("foo")
  end
end
